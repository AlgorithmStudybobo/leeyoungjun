import java.util.*;

class Solution {
    public int solution (int cacheSize, String[] cities) {
        if (cacheSize == 0)
            return cities.length*5;
        
        int answer = 0;
        LinkedList<String> cache = new LinkedList<>();
        for (int i = 0; i < cities.length; i++) {
            String s = cities[i].toUpperCase();
            if(cache.remove(s)) {
                answer += 1;
                cache.add(s);
            } else {
                answer += 5;
                if (cache.size() >= cacheSize) {
                    cache.remove(0);
                }
                cache.add(s);
            }
            
        }
        return answer;
    }
}

// import java.util.*;

// class Solution {
//     public int solution(int cacheSize, String[] cities) {
//         int answer = 0;
//         LinkedList<String> queue = new LinkedList<> ();
        
//         // cachesize만큼 넣고 시작하기 : cache miss += 5
//         for (int i = 0; i < cacheSize; i++) {
            
//             // for (int k = 0; k < i; k++) {   // 이전까지 같은게 있다면,, 1추가 + 건너뛰기
//             //     if (queue.get(k).equals(cities[i].toLowerCase())) { // hit
//             //         answer += 1;
//             //         continue;
//             //     } 
//             // }
//             queue.add(cities[i].toLowerCase());
//             answer += 5;        
//         }
        
//         // 넣은 이후 캐시 사이즈 고정, 이제 hit, miss 여부만 찾기.
//         for (int i = cacheSize; i < cities.length; i++) {
//             // 탐색하기
//             boolean flag = false;
//             for (int j = 0; j < cacheSize; j++) {
//                 if (queue.get(j).equals(cities[i].toLowerCase())) { // hit
//                     answer += 1;
//                     flag = true;
//                     break;
//                 } 
//             }
//             if (!flag) {
//                 queue.pollFirst();
//                 queue.add(cities[i].toLowerCase());
//                 answer += 5; 
//             }
                  
//         }
        
        
        
        
//         return answer;
//     }
// }
